---
-- make/make_project.lua
-- Project makefile exporting.
--
-- Author Jason Perkins
-- Copyright (c) 2017 Jason Perkins and the Premake project
---

	local p = premake

	local make = ...
	local emit = make.emit



---
-- Set up the module
---

	local m = {}
	m.elements = {}



---
-- Project export entry point
---

	m.elements.project = function(wks)
		return {
			m.header,
			m.defines
		}
	end

	function m.export(prj)
		-- TODO: use configuration to choose the toolset
		local toolset = premake.tools.gcc

		p.callArray(m.elements.project, prj, toolset)
	end



---
-- Emitter functions for specific makefile sections.
---

	function m.defines(cfg, toolset)
		local defines = toolset.getdefines(cfg.defines)

		emit:assignment("DEFINES", defines)

		--p.outln('DEFINES +=' .. gmake2.list(table.join(toolset.getdefines(cfg.defines, cfg), toolset.getundefines(cfg.undefines))))


		-- TODO: inherit workspace settings
	end



	function m.header()
		emit:comment("GNU Make project makefile autogenerated by Premake")
		p.w()
	end


---
-- End of module
---

	return m
